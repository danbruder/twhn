-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Juniper.Object.Comment exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode
import Juniper.InputObject
import Juniper.Interface
import Juniper.Object
import Juniper.Scalar
import Juniper.ScalarCodecs
import Juniper.Union


{-| The item's unique id.
-}
id : SelectionSet Int Juniper.Object.Comment
id =
    Object.selectionForField "Int" "id" [] Decode.int


{-| The username of the item's author.
-}
by : SelectionSet String Juniper.Object.Comment
by =
    Object.selectionForField "String" "by" [] Decode.string


{-| The ids of the item's comments, in ranked display order.
-}
kids : SelectionSet (Maybe (List Int)) Juniper.Object.Comment
kids =
    Object.selectionForField "(Maybe (List Int))" "kids" [] (Decode.int |> Decode.list |> Decode.nullable)


{-| The comment's parent: either another comment or the relevant story.
-}
parent : SelectionSet Int Juniper.Object.Comment
parent =
    Object.selectionForField "Int" "parent" [] Decode.int


{-| The comment text. HTML.
-}
text : SelectionSet String Juniper.Object.Comment
text =
    Object.selectionForField "String" "text" [] Decode.string


{-| Creation date of the item, in Unix Time.
-}
time : SelectionSet Juniper.ScalarCodecs.DateTime Juniper.Object.Comment
time =
    Object.selectionForField "ScalarCodecs.DateTime" "time" [] (Juniper.ScalarCodecs.codecs |> Juniper.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


itemUrl : SelectionSet String Juniper.Object.Comment
itemUrl =
    Object.selectionForField "String" "itemUrl" [] Decode.string


comments :
    SelectionSet decodesTo Juniper.Object.Comment
    -> SelectionSet (List decodesTo) Juniper.Object.Comment
comments object____ =
    Object.selectionForCompositeField "comments" [] object____ (Basics.identity >> Decode.list)


safeText : SelectionSet String Juniper.Object.Comment
safeText =
    Object.selectionForField "String" "safeText" [] Decode.string


humanTime : SelectionSet String Juniper.Object.Comment
humanTime =
    Object.selectionForField "String" "humanTime" [] Decode.string
